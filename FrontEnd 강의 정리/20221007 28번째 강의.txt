2022-10-07

--------------------------------------------------------

    <h1>Modal</h1>

    <style>
        button {
            border: none;
            padding: 0.5rem;
            background-color: transparent;
            border: 1px solid;
            cursor: pointer;
        }
        #overlay {
            position: fixed;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            background-color: rgba(0 0 0 / 0.2);
        }
        #modal {
            background-color: #fff;
            width: 20rem;
            margin: 100px auto 0;
            padding: 1rem;
            border-radius: 1rem;
        }
        .hidden {
            display: none;
        }
    </style>

    <button>Open</button>

    <div id="overlay" class="hidden">
        <div id="modal">
            <h3>Modal Content</h3>
            <p>
                Lorem ipsum dolor sit amet consectetur adipisicing elit. Explicabo iusto unde ratione pariatur, omnis placeat natus error repellendus! Cum iusto voluptatem blanditiis aliquam expedita modi libero sapiente, a consequatur quos!
            </p>
        </div>
    </div>

    <script>
        const button = document.querySelector("button");
        const modal = document.getElementById("modal");
        const overlay = document.getElementById("overlay");

        // modal만 click해서 없애는 법
        // button.addEventListener("click", (e) => {
        //     overlay.classList.remove("hidden");
        //     // console.log(modal);
        //     modal.addEventListener("click", (e) => {
        //         overlay.classList.add("hidden");
        //     })
        // })

        // 강사풀이 - overlay만 click해서 없애는 법
        button.addEventListener("click", (e) => {
            overlay.classList.remove("hidden");
        })

        overlay.addEventListener("click", (e) => {
            // console.log(e.target); 

            // e.target.classList.add("hidden"); // 잘못된 방식 -> e.target은 선택된 것만 숨겨버리기 때문이다.

            if (e.target === overlay) {
                e.target.classList.add("hidden");
            }
        })
    </script>

---------------------------------------------------------------------------

    <h1>Image Gallery</h1>

    <style>
        img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        .main {
            width: 400px;
            height: 300px;
            background-color: #ddd;
            margin-bottom: 0.5rem;
        }
        .container {
            display: flex;
        }
        .item {
            width: 100px;
            height: 100px;
            cursor: pointer;
            opacity: 0.8;
        }
        .item:hover {
            opacity: 1;
        }
    </style>

    <div class="main">
        <img id="main-image" src="../../img/casper.jfif" alt="">
    </div>

    <div class="container">
        <div class="item">
            <img src="../../img/logo.png" alt="" onclick="f(this)">
        </div>
        <div class="item">
            <img src="../../img/30 Of The Smartest Dog Breeds As Proved By Science.jpg" alt="" onclick="f(this)">
        </div>
        <div class="item">
            <img src="../../img/firefox2.png" alt="" onclick="f(this)">
        </div>
        <div class="item">
            <img src="../../img/반려동물.jpg" alt="" onclick="f(this)">
        </div>
    </div>

    <script>
        // element의 onclick속성에 함수를 연결한다.
        // element의 attribute를 사용해서 event를 처리한다.
        // this 인자는 event가 발생할 element이다. // 여기서의 event는 onclick
        // 이 문제는 반복문으로도 가능하다. 꼭 해볼 것

        function f(el) { // el은 element이다. // 여기서의 element는 this
            // console.log(el);
            // console.log(el.src);

            const mainImage = document.getElementById("main-image");
            mainImage.src = el.src;
        }
    </script>

--------------------------------------------------------------------------

    <h1>Q. Modal Gallery</h1>

    <style>
        img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        #overlay {
            position: fixed;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            background-color: rgba(0 0 0 / 0.2);
        }
        .container {
            display: flex;
        }
        .item {
            width: 100px;
            height: 100px;
            cursor: pointer;
        }
        .hidden {
            display: none;
        }
        #modal {
            width: 20rem;
            margin: 100px auto 0;
            padding: 1rem;
            border-radius: 1rem;
        }
    </style>

    <div id="overlay" class="hidden">
        <div id="modal">
            <img id="main" src="" alt="">
        </div>
    </div>

    <div id="main" class="container">
        <div class="item">
            <img src="../../img/반려동물.jpg" alt="" onclick="f(this)">
        </div>
        <div class="item">
            <img src="../../img/casper.jfif" alt="" onclick="f(this)">
        </div>
        <div class="item">
            <img src="../../img/양돈.jpg" alt="" onclick="f(this)">
        </div>
        <div class="item">
            <img src="../../img/Pomsky - 12 Surprising Facts About Pomeranian Husky Mix.jpg" alt="" onclick="f(this)">
        </div>
    </div>

    <script>
        function f(el) {
            console.log(el)
            const main = document.getElementById("main");
            main.src = el.src;

            const overlay = document.getElementById("overlay");
            overlay.classList.remove("hidden")
        }

        const overlay = document.getElementById("overlay");

        overlay.addEventListener("click", (e) => {
            if (e.target === overlay){
                e.target.classList.add("hidden");
            }
        })
    </script>

----------------------------------------------------------------------------------------

    <h1>Q. Modal Gallery How to </h1>

    <style>
        img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
        #overlay {
            position: fixed;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            background-color: rgba(0 0 0 / 0.2);
        }
        #modal {
            width: 300px;
            height: 400px;
            background-color: #ddd;
            margin-bottom: 0.5rem;
            background-color: #fff;
            display: block;
            margin: 100px auto;
        }
        .container {
            display: flex;
        }
        .item {
            width: 100px;
            height: 100px;
            cursor: pointer;
        }
        .hidden {
            display: none;
        }
    </style>

    <div id="overlay" class="hidden">
        <img src="" alt="" id="modal">
    </div>

    <div class="container">
        <div class="item">
            <img src="" alt="" onclick="f(this)">
        </div>
        <div class="item">
            <img src="" alt="" onclick="f(this)">
        </div>
        <div class="item">
            <img src="" alt="" onclick="f(this)">
        </div>
        <div class="item">
            <img src="" alt="" onclick="f(this)">
        </div>
    </div>

    <script>
        const overlay = document.getElementById("overlay");

        function f(el) {
            const modal = document.getElementById("modal");
            // overlay를 보이게 한다.
            overlay.classList.remove("hidden");
            // modal 이미지에 썸네일의 source를 전달한다.
            modal.src = el.src;
        }

        // overlay를 click했을 때 modal 종료
        overlay.addEventListener("click", (e) => {
            if (e.target === overlay) {
                e.target.classList.add("hidden");
            }
        })
    </script>

---------------------------------------------------------------------------------------------

    <h1>Carousel</h1>
    
    <style>
        .container {
            width: 200px;
            height: 200px;
            background-color: #ddd;
            display: flex;
            overflow: hidden;
        }
        .item {
            width: inherit;
            /* inherit: 부모 속성의 element를 그대로 이어받는다. */
            height: inherit;
            /* border: 1px dashed; */
            flex-shrink: 0;
            transition: 0.2s;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        .hidden {
            display: none;
        }
    </style>

    <div class="container">
        <div class="item">1</div>
        <div class="item">2</div>
        <div class="item">3</div>
    </div>

    <button id="prev" onclick="f(-1)" class="hidden">&#10094;</button>
    <button id="next" onclick="f(1)">&#10095;</button>

    <SCRipt>
        const next = document.getElementById("next");
        const items = document.querySelectorAll(".item");

        let index = 0; // 함수 내부에서 index가 정의되면 0의 값으로 초기화된다.

        function f(x) {
            // index 값 구하기
            index += x; // 전역변수인 index의 값을 계속 증가
            console.log(index);

            // 이미지 이동하기
            items[0].style.marginLeft = `-${index * 200}px`;

            // Buttons control

            // Buttons를 초기화한다. (buttons를 보이게 만든다.)
            prev.classList.remove("hidden");
            next.classList.remove("hidden");

            if (index === 0) {
                prev.classList.add("hidden");
            }

            // 마지막 이미지일 때 next버튼을 사라지게 한다.
            if (index === items.length-1) { // index를 통해 몇 번째인지 알 수가 있다.
                next.classList.add("hidden");
            }
        }

    </SCRipt>







































































