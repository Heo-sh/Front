2022-10-17
--------------------------------------------
// Q. Table element 이용 - 맥주표를 만들어라

// function DutchBeer() {
//     return (
//         <tr>
//             <td>Heineken</td>
//             <td>Netherlands</td>
//             <td>Yes</td>
//         </tr>
//     ) 
// }
// function IrishBeer() {
//     return(
//         <tr>
//             <td>Guinness</td>
//             <td>Ireland</td>
//             <td>Yes</td>
//         </tr>
//     ) 
// }
// function JapaneseBeer() {
//     return (
//         <tr>
//             <td>Asahi</td>
//             <td>Japanese</td>
//             <td>No</td>
//         </tr>
//     )
// }

// function App() {
//     return (
//         <>
//             <h2>Beers</h2>
//             <table>
//             <tr>
//             <th>Brand</th>
//             <th>Origin</th>
//             <th>available</th>
//             </tr>
//                 <DutchBeer />
//                 <IrishBeer />
//                 <JapaneseBeer />
//             </table>
//         </>
//     )
// }

// ---------------------------------------------------
// 강사풀이

// function App() {
//     return (
//         <>
//             <h1>Beers</h1>
//             <table>
//                 <thead>
//                     <tr>
//                         <th>Brand</th>
//                         <th>Origin</th>
//                         <th>available</th>
//                     </tr>
//                 </thead>
//                 <tbody>
//                     <DutchBeer />
//                     <IrishBeer />
//                     <JapaneseBeer />
//                 </tbody>
//             </table>
//         </>
//     )
// }

-------------------------------------------------------------

// # props
// 컴포넌트에 전달되는 인자(parameter)

function C(props) { // properties (Object의 집합)
    console.log(props); // Object {key: value, ...} -> {prop1: 'Foo'}
    const prop1 = props.prop1;

    return <li>{prop1}</li>
}

function App() {
    return (
        <>
            <h1>App</h1>
            <ul>
                {/* 속성처럼 생겼다. */}
                {/* C 컴포넌트를 재사용했다. */}
                <C prop1="Foo" />
                <C prop1="Bar" />
                <C prop1="Baz" />
            </ul>
        </>
    )
}

---------------------------------------------------------------------

// Q. props example

// function Beer(props) {
//     console.log(props);
//     const prop1 = props.prop1;
//     const prop2 = props.prop2;
//     const prop3 = props.prop3;

//     return (
//         <ul>
//             <li>{prop1}</li>
//             <li>{prop2}</li>
//             <li>{prop3}</li>
//         </ul>
//     )
// }

// function App() {
//     return (
//         <>
//             <h1>Beers</h1>
//             <Beer prop1="Heineken, Netherlands" />
//             <Beer prop2="Guinness, Ireland" />
//             <Beer prop3="Asahi, Japan" />
//         </>
//     )
// }

// ---------------------------------------------------
// 강사풀이

function Beer(props) {
    const name = props.name;
    const origin = props.origin;

    return <li>{name}, {origin}</li>
}

function App() {
    return (
        <>
            <h1>Beers</h1>
            <ul>
                <Beer name="Heineken" origin="Netherlands" />
                <Beer name="Guinness" origin="Ireland" />
                <Beer name="Asahi" origin="Japan" />
            </ul>
        </>
    )
}

-----------------------------------------------------------

// Object props

function C(props) {
    console.log(props);

    const o = props.o;

    return (
        <ul>
            <li>prop1: {o.prop1}</li>
            <li>prop2: {o.prop2}</li>
            <li>prop3: {o.prop3}</li>
        </ul>
    )
}

const o = {prop1: "Foo", prop2:"Bar", prop3:"Baz"};

function App() {
    return (
        <>
            <h1>o</h1>
            {/* 문자열과 다른 경우는 {}를 준다는 것이다. style 속성에 object를 준 것과 동일 */}
            <C o={o} />
        </>
    )
}

----------------------------------------------------------------------

// Q.

// function Beer(props) {
//     console.log(props);

//     const Beer = props.irishBeer;

    
//     return (
//         <ul>
//             <li>Name: {irishBeer.name}</li>
//             <li>Origin: {irishBeer.origin}</li>
//             <li>Available: {irishBeer.available}</li>
//         </ul>
//     )
    
// }

// const irishBeer = {name: "Guinness", origin: "Ireland", available: false};

// if (irishBeer.available === false) {
//     return {available: "No"};
// }

// function App() {
//     return (
//         <>
//             <h1>Beer</h1>
//             <Beer Beer={Beer} />
//         </>
//     )
// }

// ---------------------------------------------------
// 강사풀이

function Beer(props) {
    const beer = props.beer;

    return (
        <ul>
            <li>Name: {beer.name}</li>
            <li>Origin: {beer.origin}</li>
            {/* 삼항연산자를 사용 */}
            <li>Available: {beer.available ? "Yes" : "No"}</li>
        </ul>
    )
}

const irishBeer = {name: "Guinness", origin: "Ireland", available: false};

function App() {
    return (
        <>
            <h1>Beer</h1>
            <Beer beer={irishBeer} />
        </>
    )
}

----------------------------------------------------------

// Q. 컴포넌트 반복적으로 출력하기
// JSX에서 Array.map()을 사용하세요
// Object props가 전달이 되어야한다.

const beers = [
    {name: "Heineken", origin: "Netherlands"},
    {name: "Guinness", origin: "Ireland"},
    {name: "Asahi", origin: "Japan"}
]

// function Beer(props) {
//     const beer = beers.map((beer, index) => {
//         <li key={index}>{beer.name}, {beer.origin}</li>
//     })

// }

// function App() {
//     console.log(Beer);
// }

// ---------------------------------------------------
// 강사풀이

function Beer(props) {
    
    const beer = props.beer;

    return <li>{beer.name}, {beer.origin}</li>
}

function App() {

    const list = beers.map((beer, index) => (
        <Beer key={index} beer={beer} />
    ));

    return (
        <>
            <h1>Beers</h1>
            <ul>
                {list}
            </ul>
        </>
    )
}

----------------------------------------------------

// children props

function C(props) {
    console.log(props);

    // children은 속성 key가 children이다.
    const children = props.children;

    return (
        <fieldset>
            <legend>C</legend>
            {children}
        </fieldset>
    )
}

function Foo() {
    return <div>Foo</div>
}

function App() {
    return (
        <>
            <h1>App</h1>
            <C>
                {/* Foo 컴포넌트는 C컴포넌트의 children이다. */}
                <Foo />
            </C>
        </>
    )
}

------------------------------------------------------------

// Q. children props를 이용해서 맥주 리스트를 만들어보세요.

// function Beer(props) {
//     console.log(props);

//     const children = props.children;

    
//     return (
//         <div style={{borderTop:"1px solid"}}>
//             {children}
//         </div>
//     )
// }

// function DutchBeer() {
//     return (
//         <>
//             <h3>Heineken</h3>
//             <p>Dutch beer</p>
//         </>
//     )
// }

// function IrishBeer() {
//     return (
//         <>
//             <h3>Guinness</h3>
//             <p>IrishBeer</p>
//         </>
//     )
// }

// function App() {
//     return (
//         <>
//             <h1>Beers</h1>
//             <Beer>
//                 <DutchBeer />
//             </Beer>
//             <Beer>
//                 <IrishBeer />
//             </Beer>
//         </>
//     )
// }

--------------------------------------------------------------------

// Component tree

function Foo(props) {
    const children = props.children;

    return (
        <fieldset>
            <legend>Foo</legend>
            {children}
        </fieldset>
    )
}

function Bar(props) {
    const children = props.children;

    return (
        <fieldset>
            <legend>Bar</legend>
            {children}
        </fieldset>
    )
}

function Baz() {
    return <div>Baz</div>
}

function App() {
    return (
        <>
        <Foo>
            <Bar>
                <Baz />
            </Bar>
        </Foo>
        
        <Foo>
            <Baz />
        </Foo>
        
        <Bar>
            <Foo>
                <Baz />
            </Foo>
        </Bar>

        <Baz />

        </>
    )
}

------------------------------------------------------------

// Q.

function Beers(props) {
    const children = props.children;
    
    return (
        <fieldset>
            <legend>Beers</legend>
            {children}
        </fieldset>
    )
}

function EuropeanBeers(props) {
    const children = props.children;

    return (
        <fieldset>
            <legend>European Beers</legend>
            {children}
        </fieldset>
    )
}

function AsianBeers(props) {
    const children = props.children;

    return (
        <fieldset>
            <legend>Asian Beers</legend>
            {children}
        </fieldset>
    )
}

function DutchBeer() {
    return (
        <ul>
            <li>Heineken</li>
            <li>Guinness</li>
        </ul>
    )
}

function JapaneseBeer() {
    return (
        <ul>
            <li>Asahi</li>
            <li>Kloud</li>
        </ul>
    )
}

function App() {
    return (
        <>
        <Beers>
            <EuropeanBeers>
                <DutchBeer />
            </EuropeanBeers>
            <AsianBeers>
                <JapaneseBeer />
            </AsianBeers>
        </Beers>
        </>
    )
}

function EuropeanBeers() {
    return (
        <fieldset>
            <legend>European Beers</legend>
            <li>Heineken</li>
            <li>Guinness</li>
        </fieldset>
    )
}

function AsianBeers() {
    return (
        <fieldset>
            <legend>Asian Beers</legend>
            <li>Asahi</li>
            <li>Kloud</li>
        </fieldset>
    )
}

function App() {
    return(
        <>
        <Beers>
            <EuropeanBeers />
            <AsianBeers />
        </Beers>
        </>
    )
}