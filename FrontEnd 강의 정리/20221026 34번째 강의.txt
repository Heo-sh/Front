2022-10-26

----------------------------------------------------------

// Beer form: filter

function App() {
  const [beers, setBeers] = useState([]);

  function handleChange(e) {
    const name = e.target.value; // 사용자로부터 입력받은 키워드를 name 변수에 담는다.

    if(!name) {
      setBeers([]);
      return;
    }

    console.log(name);

    const DATA = [
      {id: "b1", name: "Heineken"},
      {id: "b2", name: "Guinness"},
      {id: "b3", name: "Kloud"},
      {id: "b4", name: "Asahi"},
      {id: "b5", name: "KGB"},
      {id: "b6", name: "Hoegaarden"}
    ];

    const updatedBeers = DATA.filter(beer => { // name변수에 담긴 키워드를 DATA 변수에서 비슷한 word가 있는 지를 filtering한다.
      // String.startsWith(p): Strting이 p로 시작하면 true or false를 return한다.
      if(beer.name.startsWith(name)) { 
        return beer;
      }
    })

    // console.log(updatedBeers);

    setBeers(updatedBeers); // updatedBeers를 update하여 beers로 전달시킨다.
  }

  const beerList = beers.map((beer, index) => (
    // setBeers로 전달받은 updatedBeers를 beers로 전달시켜 map메서드로 새로운 array로 만들어 beerList라는 변수에 담는다. 
    <li key={index}>{beer.name}</li>
  ))

  return (
    <>
      <h1>Live Search</h1>
      <input
        type="text"
        onChange={handleChange}
        placeholder="Search"
        />
      <ul>
        {beerList}
      </ul>
    </>
  )
}

--------------------------------------------------------------------

// Beer form: create

const initialBeers = [
  {id: "b1", name: "Heineken"},
];

function App() {
  const [beers, setBeers] = useState(initialBeers);
  const [name, setName] = useState("");

  function handleSubmit(e) {
    e.preventDefault();

    // console.log(name);

    // 입력받은 값을 담을 새로운 변수
    const newBeer = {id: Math.random(), name: name};
    // const newBeer = {id: Math.random(), name}; <- 이렇게도 가능

    // console.log(newBeer);

    // beers array에 newBeer를 추가
    const updatedBeers = [...beers, newBeer];

    // console.log(updatedBeers);
    
    // beers state를 update한다.
    setBeers(updatedBeers);
    setName("");
  }
  
  function handleChange(e) {
    const name = e.target.value;
    setName(name);

    // console.log(name);
  }
  
  const beerList = beers.map(beer => (
    <li key={beer.id}>
      {beer.name}
    </li>
  ))

  return (
    <>
      <h1>Beers</h1>

      <form onSubmit={handleSubmit}>
        <input
          type="text"
          placeholder="Guinness"
          onChange={handleChange}
          value={name}
        />
        <button
          type="submit"
          disabled={!name}
        >
          Add
        </button>
      </form>
      
      <ul>
        {beerList}
      </ul>
    </>
  )
}

-------------------------------------------------------------------

// Beer form: delete

const initialBeers = [
  {id: "b1", name: "Heineken"},
  {id: "b2", name: "Guinness"},
  {id: "b3", name: "Kloud"}
];

function App() {
  const [beers, setBeers] = useState(initialBeers);

  function deleteBeer(beerId) {
    // console.log(beerId)

    const updatedBeers = beers.filter(beer => {
      if(beer.id !== beerId) {
        return beer;
      }
    })
    
    setBeers(updatedBeers);
  }

  const beerList = beers.map(beer => (
    <li key={beer.id}>
      {beer.name} {" "}
      <button onClick={() => deleteBeer(beer.id)}>Delete</button>
    </li>
  ))

  return (
    <>
      <h1>Beers</h1>

      <form>
        <input
          type="text"
          placeholder="Guinness"
          disabled={true}
        />
        <button
          type="submit"
          disabled={true}
        >
          Add
        </button>
      </form>
      
      <ul>
        {beerList}
      </ul>
    </>
  )
}